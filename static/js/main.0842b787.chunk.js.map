{"version":3,"sources":["components/Header.jsx","PokemonProvider.jsx","components/PokemonCard.jsx","components/Content.jsx","components/Home.jsx","components/Loader.jsx","components/TypeLabel.jsx","components/StatLevels.jsx","components/Info.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","breakpoints","up","height","appBarClass","backgroundColor","title","display","search","position","borderRadius","shape","alpha","palette","common","white","marginLeft","width","spacing","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","inputText","setInputText","classes","className","AppBar","Toolbar","Grid","container","item","xs","sm","Typography","variant","noWrap","md","InputBase","value","onChange","e","target","placeholder","input","inputProps","PokemonContext","React","createContext","usePokemons","useContext","PokemonProvider","children","pokemons","useState","array","setArray","a","fetch","data","json","res","Promise","all","results","map","pokemon","url","id","substring","length","v","Vibrant","getPalette","background","_rgb","useEffect","fetchData","then","useMemo","getPokemons","Provider","card","cardActionArea","pokemonName","textAlign","textTransform","PokemonCard","history","useHistory","imageURL","onClick","push","key","Card","style","elevation","CardActionArea","CardMedia","component","alt","name","src","CardContent","gutterBottom","Content","CircularProgress","includes","toLowerCase","Home","direction","Loader","loader","TypeLabel","type","dark","StatLevels","stats","obj","LinearProgress","stat","base_stat","Info","useParams","info","setInfo","setLoader","bannerColor","setBannerColor","timer","setTimeout","clearTimeout","fetchDetails","fetchColor","imageUrl","types","weight","base_experience","abilities","ab","slot","ability","App","exact","from","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.0842b787.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 20,\n    [theme.breakpoints.up(\"xs\")]: {\n      height: 90,\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      height: 60,\n    },\n  },\n  appBarClass: {\n    backgroundColor: \"rgb(236, 49, 49);\",\n    [theme.breakpoints.up(\"xs\")]: {\n      height: 90,\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      height: 60,\n    },\n  },\n  title: {\n    flexGrow: 1,\n    display: \"block\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"6ch\",\n      \"&:focus\": {\n        width: \"8ch\",\n      },\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"8ch\",\n      \"&:focus\": {\n        width: \"10ch\",\n      },\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"10ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n    paddingRight: theme.spacing(15),\n  },\n}));\n\nexport default function SearchAppBar({ inputText, setInputText }) {\n  const classes = useStyles();\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBarClass}>\n        <Toolbar>\n          <Grid container>\n            {/* left padding */}\n            <Grid item xs={2} sm={1} />\n\n            <Grid item xs={10} sm={3}>\n              <Typography className={classes.title} variant=\"h4\" noWrap>\n                Pokédex\n              </Typography>\n            </Grid>\n\n            <Grid item xs={2} md={3} />\n\n            <Grid item>\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n                <InputBase\n                  value={inputText}\n                  onChange={inputTextHandler}\n                  placeholder=\"Search\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{ \"aria-label\": \"search\" }}\n                />\n              </div>\n            </Grid>\n\n            {/* right padding */}\n            <Grid item xs={2} sm={1} />\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect, useMemo } from \"react\";\nimport * as Vibrant from \"node-vibrant\";\n\nconst PokemonContext = React.createContext();\n\nexport function usePokemons() {\n  return useContext(PokemonContext);\n}\n\nexport default function PokemonProvider({ children }) {\n  const getPokemons = () => {\n    const [array, setArray] = useState([]);\n\n    async function fetchData() {\n      const data = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=300\"); // max limit = 649\n      const res = await data.json();\n\n      return Promise.all(\n        res.results.map(async (pokemon) => {\n          const { url } = pokemon;\n          const id = url.substring(34, url.length - 1);\n          let v = new Vibrant(\n            `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${id}.svg`\n          );\n          const palette = await v.getPalette();\n\n          return {\n            ...pokemon,\n            background: `rgba(${palette.Vibrant._rgb[0]}, ${palette.Vibrant._rgb[1]}, ${palette.Vibrant._rgb[2]}, 0.7)`,\n            id,\n          };\n        })\n      );\n    }\n\n    useEffect(() => {\n      fetchData().then(setArray);\n    }, []);\n\n    return useMemo(() => {\n      return { array };\n    }, [array]);\n  };\n\n  const pokemons = getPokemons().array;\n\n  return (\n    <PokemonContext.Provider value={pokemons}>\n      {children}\n    </PokemonContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    borderRadius: 14,\n    height: 300,\n  },\n  cardActionArea: {\n    height: 300,\n  },\n  pokemonName: {\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n  },\n}));\n\nexport default function PokemonCard({ pokemon }) {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const imageURL = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemon.id}.svg`;\n\n  return (\n    <Grid\n      className=\"card-parent\"\n      onClick={() => history.push(`/${pokemon.id}`)}\n      item\n      xs={12}\n      sm={6}\n      md={3}\n      key={pokemon.id}\n    >\n      <div className=\"card\">\n        <Card\n          className={classes.card}\n          style={{ background: pokemon.background }}\n          elevation={3}\n        >\n          <CardActionArea className={classes.cardActionArea}>\n            <CardMedia\n              component=\"img\"\n              alt={pokemon.name}\n              height=\"250\"\n              src={imageURL}\n              title={pokemon.name}\n            />\n            <div className=\"overlay\"></div>\n            <CardContent>\n              <Typography gutterBottom className={classes.pokemonName}>\n                {pokemon.name}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { usePokemons } from \"../PokemonProvider\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport PokemonCard from \"./PokemonCard.jsx\";\n\nexport default function Content({ inputText }) {\n  const pokemons = usePokemons();\n\n  return (\n    <>\n      {pokemons.length === 0 ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        <Grid container>\n          {/* left padding */}\n          <Grid item xs={2} sm={1} />\n\n          {/* content */}\n          <Grid\n            item\n            container\n            xs={9}\n            sm={10}\n            spacing={3}\n            justifyContent=\"center\"\n          >\n            {pokemons.map((pokemon) =>\n              pokemon.name.includes(inputText.toLowerCase()) ? (\n                <PokemonCard key={pokemon.id} pokemon={pokemon} />\n              ) : (\n                false\n              )\n            )}\n          </Grid>\n\n          {/* right padding */}\n          <Grid item xs={1} sm={1} />\n        </Grid>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header.jsx\";\nimport Content from \"./Content.jsx\";\n\nexport default function Home() {\n  const [inputText, setInputText] = useState(\"\");\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item xs={12}>\n        <Header inputText={inputText} setInputText={setInputText} />\n      </Grid>\n      <Grid item xs={12}>\n        <Content inputText={inputText} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport default function Loader({ loader }) {\n  return (\n    <>\n      {loader ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        <h1>Pokemon not found</h1>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function TypeLabel({ type, color, dark }) {\n  return (\n    <>\n      {dark ? (\n        <span className=\"dark type\" style={{ background: color }}>\n          {type}\n        </span>\n      ) : (\n        <span className=\"type\" style={{ background: color }}>\n          {type}\n        </span>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { LinearProgress, Typography, Box } from \"@material-ui/core\";\n\nexport default function StatLevels({ stats }) {\n  return (\n    <>\n      {stats.map((obj) => {\n        return (\n          <LinearProgress\n            key={obj.stat.name}\n            className=\"progress-bar\"\n            variant=\"determinate\"\n            value={obj.base_stat}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePokemons } from \"../PokemonProvider\";\nimport Loader from \"./Loader\";\nimport TypeLabel from \"./TypeLabel\";\nimport StatLevels from \"./StatLevels\";\nimport * as Vibrant from \"node-vibrant\";\n\nexport default function Info() {\n  let { id } = useParams();\n\n  const [info, setInfo] = useState({});\n  const [loader, setLoader] = useState(true);\n  const [bannerColor, setBannerColor] = useState(\"\");\n  const pokemons = usePokemons();\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setLoader(false);\n    }, 7000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  async function fetchDetails() {\n    const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n    return data.json();\n  }\n\n  async function fetchColor() {\n    let v = new Vibrant(\n      `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${info.id}.svg`\n    );\n    const palette = await v.getPalette();\n    return `rgba(${palette.Vibrant._rgb[0]}, ${palette.Vibrant._rgb[1]}, ${palette.Vibrant._rgb[2]}, 0.7)`;\n  }\n\n  useEffect(() => {\n    fetchDetails().then(setInfo);\n  }, []);\n\n  useEffect(() => {\n    if (pokemons.length > 0) setBannerColor(pokemons[id - 1].background);\n    else if (info.id) fetchColor().then(setBannerColor);\n  }, [info]);\n\n  const getPokemonType = (type) => {\n    if (type === \"grass\")\n      return <TypeLabel key={1} type=\"grass\" color=\"ForestGreen\" />;\n    if (type === \"poison\")\n      return <TypeLabel key={2} type=\"poison\" color=\"DarkOrchid\" />;\n    if (type === \"fire\") return <TypeLabel key={3} type=\"fire\" color=\"red\" />;\n    if (type === \"water\")\n      return <TypeLabel key={4} type=\"water\" color=\"DodgerBlue\" />;\n    if (type === \"normal\")\n      return <TypeLabel key={5} type=\"normal\" color=\"chocolate\" />;\n    if (type === \"fighting\")\n      return <TypeLabel key={6} type=\"fighting\" color=\"brown\" />;\n    if (type === \"ground\")\n      return <TypeLabel key={7} type=\"ground\" color=\"DarkGoldenRod\" />;\n    if (type === \"rock\")\n      return <TypeLabel key={8} type=\"rock\" color=\"DarkGrey\" />;\n    if (type === \"bug\") return <TypeLabel key={9} type=\"bug\" color=\"green\" />;\n    if (type === \"ghost\")\n      return <TypeLabel key={10} type=\"ghost\" color=\"LightSlateGrey\" />;\n    if (type === \"steel\")\n      return <TypeLabel key={11} type=\"steel\" color=\"DimGrey\" />;\n    if (type === \"electric\")\n      return <TypeLabel key={12} type=\"electric\" color=\"Gold\" dark={true} />;\n    if (type === \"psychic\")\n      return <TypeLabel key={13} type=\"psychic\" color=\"pink\" dark={true} />;\n    if (type === \"ice\")\n      return <TypeLabel key={14} type=\"ice\" color=\"LightBlue\" dark={true} />;\n    if (type === \"dragon\")\n      return <TypeLabel key={15} type=\"dragon\" color=\"LightCyan\" dark={true} />;\n    if (type === \"dark\")\n      return <TypeLabel key={16} type=\"dark\" color=\"black\" />;\n    if (type === \"fairy\")\n      return <TypeLabel key={17} type=\"fairy\" color=\"LightPink\" dark={true} />;\n  };\n\n  const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${info.id}.svg`;\n  return (\n    <>\n      {info.id ? (\n        <div className=\"pokemon-info\">\n          <div\n            className=\"banner\"\n            style={{ backgroundColor: bannerColor }}\n          ></div>\n          <section className=\"top\">\n            <div className=\"image\">\n              <img className=\"pokemon-pic\" src={imageUrl} alt={info.name} />\n              <div className=\"overlay\"></div>\n            </div>\n            <p className=\"title\">\n              <span className=\"name\">{info.name}</span>#\n              <span className=\"id\">{id}</span>\n              <div className=\"types\">\n                {info.types.map((obj) => {\n                  return getPokemonType(obj.type.name);\n                })}\n              </div>\n            </p>\n          </section>\n          <section className=\"properties\">\n            <div className=\"basic-info-section\">\n              <p>Height: {info.height}</p>\n              <p>Weight: {info.weight}</p>\n              <p>Base experience: {info.base_experience}</p>\n            </div>\n            <div className=\"ability-section\">\n              <h1>Abilities</h1>\n              <div className=\"abilities\">\n                {info.abilities.map((ab) => {\n                  return (\n                    <div className=\"ability\" key={ab.slot}>\n                      {ab.ability.name}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </section>\n          <section className=\"stats\">\n            <StatLevels stats={info.stats} />\n          </section>\n        </div>\n      ) : (\n        <Loader loader={loader} />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Info from \"./components/Info\";\nimport PokemonProvider from \"./PokemonProvider\";\n\nexport default function App() {\n  return (\n    <>\n      <PokemonProvider>\n        <Switch>\n          <Route exact from=\"/\" component={Home} />\n          <Route exact from=\"/:id\" component={Info} />\n        </Switch>\n      </PokemonProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App.jsx\";\nimport \"./Sass/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}