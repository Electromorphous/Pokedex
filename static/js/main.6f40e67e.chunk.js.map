{"version":3,"sources":["components/Header.jsx","PokemonProvider.jsx","components/PokemonCard.jsx","components/Content.jsx","components/Home.jsx","components/Loader.jsx","components/TypeLabel.jsx","components/StatLevels.jsx","components/Info.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","breakpoints","up","height","appBarClass","backgroundColor","title","display","width","textDecoration","cursor","search","position","borderRadius","shape","alpha","palette","common","white","marginLeft","spacing","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","inputText","setInputText","showSearchBar","history","useHistory","classes","className","AppBar","Toolbar","Grid","container","item","xs","sm","Typography","onClick","push","variant","noWrap","md","InputBase","value","onChange","e","target","placeholder","input","inputProps","PokemonContext","React","createContext","usePokemons","useContext","PokemonProvider","children","pokemons","useState","array","setArray","a","fetch","data","json","res","Promise","all","results","map","pokemon","url","id","substring","length","v","Vibrant","getPalette","background","_rgb","useEffect","fetchData","then","useMemo","getPokemons","Provider","card","cardActionArea","pokemonName","textAlign","textTransform","PokemonCard","imageURL","key","Card","style","elevation","CardActionArea","CardMedia","component","alt","name","src","CardContent","gutterBottom","Content","CircularProgress","includes","toLowerCase","Home","direction","Loader","loader","TypeLabel","type","dark","StatLevels","stats","obj","stat","LinearProgress","base_stat","Info","useParams","info","setInfo","setLoader","bannerColor","setBannerColor","timer","setTimeout","clearTimeout","fetchDetails","fetchColor","imageUrl","types","weight","base_experience","abilities","ab","slot","ability","App","exact","from","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6f40e67e.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { alpha, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      height: 60,\n    },\n  },\n  appBarClass: {\n    backgroundColor: \"rgb(236, 49, 49);\",\n    [theme.breakpoints.up(\"sm\")]: {\n      height: 60,\n    },\n  },\n  title: {\n    flexGrow: 1,\n    display: \"block\",\n    width: \"max-content\",\n\n    \"&:hover\": {\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"6ch\",\n      \"&:focus\": {\n        width: \"8ch\",\n      },\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"8ch\",\n      \"&:focus\": {\n        width: \"10ch\",\n      },\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"10ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n    paddingRight: theme.spacing(15),\n  },\n}));\n\nexport default function SearchAppBar({\n  inputText,\n  setInputText,\n  showSearchBar,\n}) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBarClass}>\n        <Toolbar>\n          <Grid container>\n            {/* left padding */}\n            <Grid item xs={2} sm={1} />\n\n            <Grid item xs={10} sm={3}>\n              <Typography\n                onClick={() => {\n                  history.push(\"/\");\n                }}\n                className={classes.title}\n                variant=\"h4\"\n                noWrap\n              >\n                Pokédex\n              </Typography>\n            </Grid>\n\n            <Grid item xs={2} md={3} />\n\n            <Grid item>\n              {showSearchBar ? (\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    value={inputText}\n                    onChange={inputTextHandler}\n                    placeholder=\"Search\"\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                    inputProps={{ \"aria-label\": \"search\" }}\n                  />\n                </div>\n              ) : (\n                <> </>\n              )}\n            </Grid>\n\n            {/* right padding */}\n            <Grid item xs={2} sm={1} />\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useContext, useState, useEffect, useMemo } from \"react\";\nimport * as Vibrant from \"node-vibrant\";\n\nconst PokemonContext = React.createContext();\n\nexport function usePokemons() {\n  return useContext(PokemonContext);\n}\n\nexport default function PokemonProvider({ children }) {\n  const getPokemons = () => {\n    const [array, setArray] = useState([]);\n\n    async function fetchData() {\n      const data = await fetch(\"https://pokeapi.co/api/v2/pokemon/?limit=200\"); // max limit = 649\n      const res = await data.json();\n\n      return Promise.all(\n        res.results.map(async (pokemon) => {\n          const { url } = pokemon;\n          const id = url.substring(34, url.length - 1);\n          let v = new Vibrant(\n            `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${id}.svg`\n          );\n          const palette = await v.getPalette();\n\n          return {\n            ...pokemon,\n            background: `rgba(${palette.Vibrant._rgb[0]}, ${palette.Vibrant._rgb[1]}, ${palette.Vibrant._rgb[2]}, 0.7)`,\n            id,\n          };\n        })\n      );\n    }\n\n    useEffect(() => {\n      fetchData().then(setArray);\n    }, []);\n\n    return useMemo(() => {\n      return { array };\n    }, [array]);\n  };\n\n  const pokemons = getPokemons().array;\n\n  return (\n    <PokemonContext.Provider value={pokemons}>\n      {children}\n    </PokemonContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    borderRadius: 14,\n    height: 300,\n  },\n  cardActionArea: {\n    height: 300,\n  },\n  pokemonName: {\n    textAlign: \"center\",\n    textTransform: \"capitalize\",\n  },\n}));\n\nexport default function PokemonCard({ pokemon }) {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const imageURL = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemon.id}.svg`;\n\n  return (\n    <Grid\n      className=\"card-parent\"\n      onClick={() => history.push(`/${pokemon.id}`)}\n      item\n      xs={12}\n      sm={6}\n      md={3}\n      key={pokemon.id}\n    >\n      <div className=\"card\">\n        <Card\n          className={classes.card}\n          style={{ background: pokemon.background }}\n          elevation={3}\n        >\n          <CardActionArea className={classes.cardActionArea}>\n            <CardMedia\n              component=\"img\"\n              alt={pokemon.name}\n              height=\"250\"\n              src={imageURL}\n              title={pokemon.name}\n            />\n            <div className=\"overlay\"></div>\n            <CardContent>\n              <Typography gutterBottom className={classes.pokemonName}>\n                {pokemon.name}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </div>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { usePokemons } from \"../PokemonProvider\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport PokemonCard from \"./PokemonCard.jsx\";\n\nexport default function Content({ inputText }) {\n  const pokemons = usePokemons();\n\n  return (\n    <>\n      {pokemons.length === 0 ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        <Grid container className=\"content-container\">\n          {/* left padding */}\n          <Grid item xs={2} sm={1} />\n\n          {/* content */}\n          <Grid\n            item\n            container\n            xs={9}\n            sm={10}\n            spacing={3}\n            justifyContent=\"center\"\n          >\n            {pokemons.map((pokemon) =>\n              pokemon.name.includes(inputText.toLowerCase()) ? (\n                <PokemonCard key={pokemon.id} pokemon={pokemon} />\n              ) : (\n                false\n              )\n            )}\n          </Grid>\n\n          {/* right padding */}\n          <Grid item xs={1} sm={1} />\n        </Grid>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header.jsx\";\nimport Content from \"./Content.jsx\";\n\nexport default function Home() {\n  const [inputText, setInputText] = useState(\"\");\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item xs={12}>\n        <Header\n          inputText={inputText}\n          setInputText={setInputText}\n          showSearchBar={true}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Content inputText={inputText} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport default function Loader({ loader }) {\n  return (\n    <>\n      {loader ? (\n        <CircularProgress color=\"secondary\" />\n      ) : (\n        <h1>Pokemon not found</h1>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function TypeLabel({ type, color, dark }) {\n  return (\n    <>\n      {dark ? (\n        <span className=\"dark type\" style={{ background: color }}>\n          {type}\n        </span>\n      ) : (\n        <span className=\"type\" style={{ background: color }}>\n          {type}\n        </span>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nexport default function StatLevels({ stats }) {\n  return (\n    <>\n      {stats.map((obj) => {\n        return (\n          <div className=\"bar\" key={obj.stat.name}>\n            <LinearProgress\n              className=\"progress\"\n              variant=\"determinate\"\n              value={obj.base_stat / 2.5}\n            />\n            <div className=\"stat-text\">\n              <span className=\"stat-name\">{obj.stat.name}</span>\n              <span className=\"stat-value\">{obj.base_stat}</span>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { usePokemons } from \"../PokemonProvider\";\nimport Header from \"./Header\";\nimport Loader from \"./Loader\";\nimport TypeLabel from \"./TypeLabel\";\nimport StatLevels from \"./StatLevels\";\nimport * as Vibrant from \"node-vibrant\";\n\nexport default function Info() {\n  let { id } = useParams();\n\n  const [info, setInfo] = useState({});\n  const [loader, setLoader] = useState(true);\n  const [bannerColor, setBannerColor] = useState(\"\");\n  const pokemons = usePokemons();\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setLoader(false);\n    }, 7000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  async function fetchDetails() {\n    const data = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`);\n    return data.json();\n  }\n\n  async function fetchColor() {\n    let v = new Vibrant(\n      `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${info.id}.svg`\n    );\n    const palette = await v.getPalette();\n    return `rgba(${palette.Vibrant._rgb[0]}, ${palette.Vibrant._rgb[1]}, ${palette.Vibrant._rgb[2]}, 0.7)`;\n  }\n\n  useEffect(() => {\n    fetchDetails().then(setInfo);\n  }, []);\n\n  useEffect(() => {\n    if (pokemons.length > 0) setBannerColor(pokemons[id - 1].background);\n    else if (info.id) fetchColor().then(setBannerColor);\n  }, [info]);\n\n  const getPokemonType = (type) => {\n    if (type === \"grass\")\n      return <TypeLabel key={1} type=\"grass\" color=\"ForestGreen\" />;\n    if (type === \"poison\")\n      return <TypeLabel key={2} type=\"poison\" color=\"DarkOrchid\" />;\n    if (type === \"fire\") return <TypeLabel key={3} type=\"fire\" color=\"red\" />;\n    if (type === \"water\")\n      return <TypeLabel key={4} type=\"water\" color=\"DodgerBlue\" />;\n    if (type === \"normal\")\n      return <TypeLabel key={5} type=\"normal\" color=\"chocolate\" />;\n    if (type === \"fighting\")\n      return <TypeLabel key={6} type=\"fighting\" color=\"brown\" />;\n    if (type === \"ground\")\n      return <TypeLabel key={7} type=\"ground\" color=\"DarkGoldenRod\" />;\n    if (type === \"rock\")\n      return <TypeLabel key={8} type=\"rock\" color=\"DarkGrey\" />;\n    if (type === \"bug\") return <TypeLabel key={9} type=\"bug\" color=\"green\" />;\n    if (type === \"ghost\")\n      return <TypeLabel key={10} type=\"ghost\" color=\"LightSlateGrey\" />;\n    if (type === \"steel\")\n      return <TypeLabel key={11} type=\"steel\" color=\"DimGrey\" />;\n    if (type === \"electric\")\n      return <TypeLabel key={12} type=\"electric\" color=\"Gold\" dark={true} />;\n    if (type === \"psychic\")\n      return <TypeLabel key={13} type=\"psychic\" color=\"pink\" dark={true} />;\n    if (type === \"ice\")\n      return <TypeLabel key={14} type=\"ice\" color=\"LightBlue\" dark={true} />;\n    if (type === \"dragon\")\n      return <TypeLabel key={15} type=\"dragon\" color=\"LightCyan\" dark={true} />;\n    if (type === \"dark\")\n      return <TypeLabel key={16} type=\"dark\" color=\"black\" />;\n    if (type === \"fairy\")\n      return <TypeLabel key={17} type=\"fairy\" color=\"LightPink\" dark={true} />;\n  };\n\n  const imageUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${info.id}.svg`;\n  return (\n    <>\n      <Header showSearchBar={false} />\n      {info.id ? (\n        <div className=\"pokemon-info\">\n          <div\n            className=\"banner\"\n            style={{ backgroundColor: bannerColor }}\n          ></div>\n          <section className=\"top\">\n            <div className=\"image\">\n              <img className=\"pokemon-pic\" src={imageUrl} alt={info.name} />\n              <div className=\"overlay\"></div>\n            </div>\n            <p className=\"title\">\n              <span className=\"name\">{info.name}</span>#\n              <span className=\"id\">{id}</span>\n              <div className=\"types\">\n                {info.types.map((obj) => {\n                  return getPokemonType(obj.type.name);\n                })}\n              </div>\n            </p>\n          </section>\n          <section className=\"properties\">\n            <div className=\"basic-info-section\">\n              <p>\n                Height <span className=\"right\">{info.height}</span>\n              </p>\n              <p>\n                Weight <span className=\"right\"> {info.weight}</span>\n              </p>\n              <p>\n                Base XP <span className=\"right\"> {info.base_experience}</span>\n              </p>\n            </div>\n            <div className=\"ability-section\">\n              <h1>Abilities</h1>\n              <div className=\"abilities\">\n                {info.abilities.map((ab) => {\n                  return (\n                    <div className=\"ability\" key={ab.slot}>\n                      {ab.ability.name}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </section>\n          <section className=\"stats\">\n            <StatLevels stats={info.stats} />\n          </section>\n        </div>\n      ) : (\n        <Loader loader={loader} />\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Info from \"./components/Info\";\nimport PokemonProvider from \"./PokemonProvider\";\n\nexport default function App() {\n  return (\n    <>\n      <PokemonProvider>\n        <Switch>\n          <Route exact from=\"/\" component={Home} />\n          <Route exact from=\"/:id\" component={Info} />\n        </Switch>\n      </PokemonProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App.jsx\";\nimport \"./Sass/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}